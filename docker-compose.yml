services:
  db:
    image: postgres:13
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    container_name: module_5_db
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: '7KZf3ZFE*rR1'
      POSTGRES_DB: 'module5_db'
      PGPASSWORD: '7KZf3ZFE*rR1'
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network

  web:
    build: .
    container_name: module_5
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://POSTGRES_USER:POSTGRES_PASSWORD@db:5432/POSTGRES_DB
    networks:
      - app_network

  backup:
    image: offen/docker-volume-backup:v2
    volumes:
      - pg_data:/backup/module5-backup:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./backups:/archive
    networks:
      - app_network
    depends_on:
      - db
    environment:
      BACKUP_FILENAME: backup-%Y-%m-%dT%H-%M-%S.tar.gz
      BACKUP_LATEST_SYMLINK: backup-latest.tar.gz
      BACKUP_CRON_EXPRESSION: "*/60 * * * *"


volumes:
  pg_data:

networks:
  app_network:
